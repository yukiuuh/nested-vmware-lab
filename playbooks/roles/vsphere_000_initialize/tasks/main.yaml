- name: Create Datacenter
  community.vmware.vmware_datacenter:
    hostname: "{{ vc_address }}"
    username: "{{ vc_username }}"
    password: "{{ vc_password }}"
    validate_certs: "{{ validate_certs | default(false) }}"
    datacenter_name: "{{ datacenter_name }}"
    state: present
- name: Create Cluster
  vmware.vmware.cluster:
    hostname: "{{ vc_address }}"
    username: "{{ vc_username }}"
    password: "{{ vc_password }}"
    validate_certs: "{{ validate_certs | default(false) }}"
    datacenter: "{{ datacenter_name }}"
    cluster: "{{ cluster_name }}"
    state: present
- name: Add Nested ESXi to Cluster
  vmware.vmware.esxi_host:
    hostname: "{{ vc_address }}"
    username: "{{ vc_username }}"
    password: "{{ vc_password }}"
    validate_certs: "{{ validate_certs | default(false) }}"
    datacenter: "{{ datacenter_name }}"
    cluster: "{{ cluster_name }}"
    esxi_host_name: "{{ item }}"
    esxi_username: "root"
    esxi_password: "{{ esxi_password }}"
    state: present
  loop: "{{ register_esxi_hostnames }}"
- name: Rescan HBA and new VMFS Volumes
  community.vmware.vmware_host_scanhba:
    hostname: "{{ vc_address }}"
    username: "{{ vc_username }}"
    password: "{{ vc_password }}"
    validate_certs: "{{ validate_certs | default(false) }}"
    cluster_name: '{{ cluster_name }}'
    rescan_vmfs: true
    rescan_hba: true

- name: Create a datastore category
  community.vmware.vmware_category:
    hostname: "{{ vc_address }}"
    username: "{{ vc_username }}"
    password: "{{ vc_password }}"
    validate_certs: "{{ validate_certs | default(false) }}"
    category_name: datastore_category
    category_cardinality: 'multiple'
    associable_object_types:
      - Datastore
    state: present

- name: Create a tag
  community.vmware.vmware_tag:
    hostname: "{{ vc_address }}"
    username: "{{ vc_username }}"
    password: "{{ vc_password }}"
    validate_certs: "{{ validate_certs | default(false) }}"
    category_name: datastore_category
    tag_name: "{{ item.name }}"
    state: present
  loop: "{{ storage_policies }}"

- name: Add tag to a Datastore
  community.vmware.vmware_tag_manager:
    hostname: "{{ vc_address }}"
    username: "{{ vc_username }}"
    password: "{{ vc_password }}"
    validate_certs: "{{ validate_certs | default(false) }}"
    tag_names:
      - "{{ item.name }}"
    object_name: "{{ item.datastore }}"
    object_type: Datastore
    state: add
  loop: "{{ storage_policies }}"
  register: datastore_tag_info
  until: datastore_tag_info is succeeded
  delay: 30
  retries: 20

- name: Create or update a vSphere tag-based storage policies
  community.vmware.vmware_vm_storage_policy:
    hostname: "{{ vc_address }}"
    username: "{{ vc_username }}"
    password: "{{ vc_password }}"
    validate_certs: "{{ validate_certs | default(false) }}"
    name: "{{ item.name }}"
    tag_category: datastore_category
    tag_name: "{{ item.name }}"
    tag_affinity: true
    state: "present"
  loop: "{{ storage_policies }}"
  register: storage_policy_info
  until: storage_policy_info is succeeded
  delay: 60
  retries: 20

- name: Create Local Content Library
  community.vmware.vmware_content_library_manager:
    hostname: "{{ vc_address }}"
    username: "{{ vc_username }}"
    password: "{{ vc_password }}"
    validate_certs: "{{ validate_certs | default(false) }}"
    library_name: "{{ item.name }}"
    library_description: "{{ item.name }}"
    library_type: local
    datastore_name: "{{ item.datastore }}"
    state: present
  loop: "{{ content_libraries }}"
  register: content_library_info
  until: content_library_info is succeeded
  delay: 30
  retries: 20 # wait for content library service
